version: '3'
networks:
    spring-cloud-network:
services:
  activemq:
    image: webcenter/activemq:latest
    container_name: activemq
    ports:
    - "8161:8161"
    - "61616:61616"
    environment:
    - ACTIVEMQ_NAME=activemq
    - ACTIVEMQ_USERNAME=admin
    - ACTIVEMQ_PASSWORD=admin
    - ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote.port=11099"
    - ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote.authenticate=false"
    - ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote.ssl=false"
    - ACTIVEMQ_SUNJMX_START="$ACTIVEMQ_SUNJMX_START -Dcom.sun.management.jmxremote"
    networks:
    - spring-cloud-network

  mongodb:
    image: mongo:6-jammy
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: 'eia-users'
    ports:
      - '27017:27017'
    volumes:
      - dbdata6:/data/db
    networks:
    - spring-cloud-network

  db:
    image: mysql:5.7
    restart: always
    command: --init-file /data/application/init.sql
    container_name: mysqldb
    environment:
      MYSQL_DATABASE: 'Users'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'root'
      MYSQL_ROOT_HOST: '%' 

    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - my-sql-data:/var/lib/mysql
      - ./init.sql:/data/application/init.sql
    networks:
      - spring-cloud-network

  backend:
    container_name: backend
    build:
        dockerfile: Backend/app/Dockerfile-backend
    image: backend-image:latest
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb:3306/Users
    ports:
        - 8080:8080
    networks:
        - spring-cloud-network
    # depends_on:
    #   db:
    #     condition: service_healthy
  frontend:
    container_name: frontend
    build:
        dockerfile: Frontend/eia-client/Dockerfile-frontend
    image: frontend-image:latest
    ports:
        - 3000:3000
    networks:
        - spring-cloud-network


# Names our volume
volumes:
  my-sql-data:
  dbdata6: 